{"version":3,"sources":["utils.ts","services/useLooko2Source.ts","views/MainView/MainView.tsx","services/useAirlySource.ts","services/useGIOSSource.ts","services/usePWrSource.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["R","degreeToRadians","d","Math","PI","radiansToDegrees","r","pairOfPointsToMeters","a","b","lat1Rad","lat","lat2Rad","deltaLatRad","deltaLngRad","lng","temp","sin","cos","temp2","atan2","sqrt","boundingBoxForPointAndSide","s","latRad","lngRad","halfSide","radius","An","Bn","Ad","Bd","WGS84EarthRadius","pradius","latRadMax","lngRadMin","lngRadMax","getValueFromSensor","sensor","fetch","Device","then","response","text","matchedGroup","exec","length","Number","parseFloat","MainView","useState","position","setPosition","navigator","geolocation","getCurrentPosition","geoposition","coords","latitude","longitude","airly_data","currentLocation","data","setData","useEffect","swLat","swLng","neLat","neLng","json","markers","dataMarkers","filter","marker","hasData","dataMarkersWithPoint","map","location","id","dataMarkersInRadius","Promise","all","valueArray","current","values","v","name","value","source","annotetedMarkersInRadius","useAirlySource","gios_data","markersWithPoint","gegrLat","gegrLon","markersInRadius","mark","sensors","PM25Sensors","param","paramCode","getSensorValue","sensorData","nonNullableValues","valueObject","useGIOSSource","looko2_data","jsonData","JSON","parse","Lat","Lon","sensorsInRadius","point","annotatedSensors","console","log","useLookO2Source","pwr_data","marker_lines","replace","match","marker_line","Array","from","iframe_lines","iframes","iframe_line","slice","iframe_value_map","Map","popup_iframe_lines","popup_iframes_matches","popup_iframe_line","popup_iframe_map","marker_popup_lines","marker_popup_matches","marker_popup_line","marker_popup_map","value_from_base64","b64","atob","get","usePWrSource","concat","inactiveIcon","L","divIcon","className","iconSize","okIcon","level1Icon","level2Icon","level3Icon","level4Icon","center","zoom","TileLayer","url","attribution","accessToken","Circle","idx","Marker","key","icon","Popup","App","exact","path","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.878874a0.chunk.js","sourcesContent":["export type Point = { lat: number; lng: number };\n\nconst R = 6371e3;\n\nfunction degreeToRadians(d: number) {\n  return (d / 180) * Math.PI;\n}\n\nfunction radiansToDegrees(r: number) {\n  return (r * 180) / Math.PI;\n}\n\nfunction WGS84EarthRadius(lat: number) {\n  const An = R * R * Math.cos(lat);\n  const Bn = R * R * Math.sin(lat);\n  const Ad = R * Math.cos(lat);\n  const Bd = R * Math.sin(lat);\n  return Math.sqrt((An * An + Bn * Bn) / (Ad * Ad + Bd * Bd));\n}\n\nexport function pairOfPointsToMeters(a: Point, b: Point) {\n  const lat1Rad = degreeToRadians(a.lat);\n  const lat2Rad = degreeToRadians(b.lat);\n  const deltaLatRad = degreeToRadians(a.lat - b.lat);\n  const deltaLngRad = degreeToRadians(a.lng - b.lng);\n\n  const temp =\n    Math.sin(deltaLatRad / 2) * Math.sin(deltaLatRad / 2) +\n    Math.cos(lat1Rad) *\n      Math.cos(lat2Rad) *\n      Math.sin(deltaLngRad / 2) *\n      Math.sin(deltaLngRad / 2);\n  var temp2 = 2 * Math.atan2(Math.sqrt(temp), Math.sqrt(1 - temp));\n\n  return R * temp2;\n}\n\nexport function boundingBoxForPointAndSide(a: Point, s: number) {\n  const latRad = degreeToRadians(a.lat);\n  const lngRad = degreeToRadians(a.lng);\n  const halfSide = s / 2;\n\n  const radius = WGS84EarthRadius(latRad);\n  const pradius = radius * Math.cos(latRad);\n\n  const latRadMin = latRad - halfSide / radius;\n  const latRadMax = latRad + halfSide / radius;\n  const lngRadMin = lngRad - halfSide / pradius;\n  const lngRadMax = lngRad + halfSide / pradius;\n\n  return [\n    radiansToDegrees(latRadMin),\n    radiansToDegrees(lngRadMin),\n    radiansToDegrees(latRadMax),\n    radiansToDegrees(lngRadMax)\n  ];\n}\n","import { useState, useEffect } from \"react\";\nimport { Sensor, Source } from \"../views/MainView/MainView\";\nimport { pairOfPointsToMeters, Point } from \"../utils\";\n\ntype AnnotatedPoint = Point & { Device: string };\n\nfunction getValueFromSensor(sensor: AnnotatedPoint): Promise<number | null> {\n  return fetch(\n    `https://cors-anywhere.herokuapp.com/looko2.com/tracker.php?lan=&search=${sensor.Device}`\n  )\n    .then(response => response.text())\n    .then(response => {\n      const matchedGroup = /PM2\\.5.*?(\\d+)\\sug\\/m3\\s/g.exec(response);\n      return (\n        (matchedGroup?.length === 2 && Number.parseFloat(matchedGroup[1])) ||\n        null\n      );\n    });\n}\n\nexport function useLookO2Source(currentLocation: Point, radius: number) {\n  const [data, setData] = useState<Array<Sensor> | null>(null);\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/looko2.com/heatmap.php\")\n      .then(response => response.text())\n      .then(async response => {\n        const jsonData = /var\\sjsonData\\s=\\s'(.*)';/g.exec(response)?.[1];\n        const data = JSON.parse(jsonData || \"\") as Array<any>;\n        const sensors: Array<AnnotatedPoint> = data.map(sensor => ({\n          Device: sensor.Device,\n          lat: Number.parseFloat(sensor.Lat),\n          lng: Number.parseFloat(sensor.Lon)\n        }));\n        const sensorsInRadius = sensors.filter(\n          point => pairOfPointsToMeters(currentLocation, point) < radius\n        );\n        const annotatedSensors = await Promise.all<Sensor>(\n          sensorsInRadius.map(async sensor => ({\n            lat: sensor.lat,\n            lng: sensor.lng,\n            value: await getValueFromSensor(sensor),\n            source: \"LOOKO2\" as Source\n          }))\n        );\n        console.log(annotatedSensors);\n        setData(annotatedSensors);\n      });\n  }, [currentLocation, radius]);\n\n  return {\n    looko2_data: data || []\n  };\n}\n","import React, { useState } from \"react\";\nimport { Map, Marker, Popup, TileLayer, Circle } from \"react-leaflet\";\nimport \"./MainView.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { usePWrSource } from \"../../services/usePWrSource\";\nimport L from \"leaflet\";\nimport { useAirlySource } from \"../../services/useAirlySource\";\nimport { useGIOSSource } from \"../../services/useGIOSSource\";\nimport { useLookO2Source } from \"../../services/useLooko2Source\";\n\nexport type Source = \"PWR\" | \"GIOS\" | \"AIRLY\" | \"LOOKO2\";\n\nexport type Sensor = {\n  lat: number;\n  lng: number;\n  value: number | null;\n  source: Source;\n};\n\nexport function MainView() {\n  const [position, setPosition] = useState({ lat: 51.107, lng: 17.0385 });\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(geoposition => {\n      setPosition({\n        lat: geoposition.coords.latitude,\n        lng: geoposition.coords.longitude\n      });\n    });\n  }\n\n  const radius = 10000;\n  const { airly_data } = useAirlySource(position, radius);\n  const { gios_data } = useGIOSSource(position, radius);\n  const { looko2_data } = useLookO2Source(position, radius);\n  const { pwr_data } = usePWrSource(position, radius);\n\n  const data = new Array<Sensor>()\n    .concat(airly_data)\n    .concat(pwr_data)\n    .concat(gios_data)\n    .concat(looko2_data);\n\n  const inactiveIcon = L.divIcon({\n    className: \"div-icon inactive\",\n    iconSize: [20, 20]\n  });\n  const okIcon = L.divIcon({ className: \"div-icon ok\", iconSize: [20, 20] });\n  const level1Icon = L.divIcon({\n    className: \"div-icon level-1\",\n    iconSize: [20, 20]\n  });\n  const level2Icon = L.divIcon({\n    className: \"div-icon level-2\",\n    iconSize: [20, 20]\n  });\n  const level3Icon = L.divIcon({\n    className: \"div-icon level-3\",\n    iconSize: [20, 20]\n  });\n  const level4Icon = L.divIcon({\n    className: \"div-icon level-4\",\n    iconSize: [20, 20]\n  });\n\n  function getIcon(sensor: Sensor) {\n    if (sensor.value === null) return inactiveIcon;\n    if (sensor.value < 10) return okIcon;\n    if (sensor.value < 15) return level1Icon;\n    if (sensor.value < 25) return level2Icon;\n    if (sensor.value < 35) return level3Icon;\n    return level4Icon;\n  }\n\n  // function getLogo(sensor: Sensor) {\n  //   switch (sensor.source) {\n  //     case \"AIRLY\":\n  //       return \"https://antyweb.pl/wp-content/uploads/2016/11/airly-logo.jpg\";\n  //     case \"GIOS\":\n  //       return \"http://www.gios.gov.pl/images/logo.png\";\n  //     case \"PWR\":\n  //       return \"https://gfx.dlastudenta.pl/photos/uczelnie/pwr_320.jpg\";\n  //     case \"LOOKO2\":\n  //       return \"https://looko2web.nazwa.pl/wp-content/themes/looko2/img/logo.png\";\n  //   }\n  // }\n\n  return (\n    <Map center={position} zoom={10} id=\"mapid\">\n      <TileLayer\n        url=\"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}\"\n        attribution='&copy; <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> \n                          © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> \n                          <strong><a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\" rel=\"noreferer noopener\">\n                          Improve this map</a></strong>'\n        id=\"mapbox.light\"\n        accessToken=\"pk.eyJ1IjoibWthcm9sIiwiYSI6ImNqazl4ODMxMDJ3OTEzd2xlbnN6OHRlMTgifQ.I_mm4Sc8fkKJaFpQc8BWjg\"\n      />\n      <Circle center={position} radius={radius} />\n      {data.map((s, idx) => (\n        <Marker position={s} key={idx} icon={getIcon(s)}>\n          {s.value && (\n            <Popup>\n              {s.value} ug/m3 {s.source}\n            </Popup>\n          )}\n        </Marker>\n      ))}\n    </Map>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Sensor, Source } from \"../views/MainView/MainView\";\nimport {\n  pairOfPointsToMeters,\n  Point,\n  boundingBoxForPointAndSide\n} from \"../utils\";\n\ntype AnnotatedPoint = Point & { id: string };\n\nfunction getValueFromStation(station: AnnotatedPoint): Promise<number | null> {\n  return fetch(\n    `https://cors-anywhere.herokuapp.com/airapi.airly.eu/v2/measurements/installation?apikey=fae55480ef384880871f8b40e77bbef9&installationId=${station.id}`\n  )\n    .then(response => response.json())\n    .then(async sensor => {\n      const valueArray = sensor.current.values.filter(\n        (v: any) => v.name === \"PM25\"\n      );\n      return valueArray[0]?.value || null;\n    });\n}\n\nexport function useAirlySource(currentLocation: Point, radius: number) {\n  const [data, setData] = useState<Array<Sensor> | null>(null);\n  useEffect(() => {\n    const [swLat, swLng, neLat, neLng] = boundingBoxForPointAndSide(\n      currentLocation,\n      radius\n    );\n    fetch(\n      `https://cors-anywhere.herokuapp.com/airapi.airly.eu/v2/markers?swLat=${swLat}&swLng=${swLng}&neLat=${neLat}&neLng=${neLng}&apikey=fae55480ef384880871f8b40e77bbef9`\n    )\n      .then(response => response.json())\n      .then(async response => {\n        const markers = response.markers;\n        const dataMarkers: Array<any> = markers.filter(\n          (marker: any) => marker.hasData\n        );\n        const dataMarkersWithPoint: Array<AnnotatedPoint> = dataMarkers.map(\n          (marker: any) => ({\n            lat: Number.parseFloat(marker.location.latitude),\n            lng: Number.parseFloat(marker.location.longitude),\n            id: marker.id\n          })\n        );\n        const dataMarkersInRadius = dataMarkersWithPoint.filter(\n          marker => pairOfPointsToMeters(currentLocation, marker) < radius\n        );\n        const annotetedMarkersInRadius = await Promise.all(\n          dataMarkersInRadius.map(async marker => ({\n            lat: marker.lat,\n            lng: marker.lng,\n            value: await getValueFromStation(marker),\n            source: \"AIRLY\" as Source\n          }))\n        );\n        setData(annotetedMarkersInRadius);\n      });\n  }, [currentLocation, radius]);\n  return {\n    airly_data: data || []\n  };\n}\n","import { useState, useEffect } from \"react\";\nimport { Sensor, Source } from \"../views/MainView/MainView\";\nimport { pairOfPointsToMeters, Point } from \"../utils\";\n\ntype AnnotatedPoint = Point & { id: string };\n\nfunction getValueFromStation(station: AnnotatedPoint): Promise<number | null> {\n  return fetch(\n    `https://cors-anywhere.herokuapp.com/api.gios.gov.pl/pjp-api/rest/station/sensors/${station.id}`\n  )\n    .then(response => response.json())\n    .then(async sensors => {\n      const PM25Sensors = sensors.filter(\n        (sensor: any) => sensor.param.paramCode === \"PM2.5\"\n      );\n      const getSensorValue = async (sensor: { id: string }) => {\n        const data = await fetch(\n          `https://cors-anywhere.herokuapp.com/api.gios.gov.pl/pjp-api/rest/data/getData/${sensor.id}`\n        );\n        const sensorData = await data.json();\n        const nonNullableValues = sensorData.values.filter(\n          (valueObject: any) => valueObject.value !== null\n        );\n\n        return nonNullableValues.length > 0 ? nonNullableValues[0].value : null;\n      };\n\n      return PM25Sensors.length > 0\n        ? await getSensorValue(PM25Sensors[0])\n        : null;\n    });\n}\n\nexport function useGIOSSource(currentLocation: Point, radius: number) {\n  const [data, setData] = useState<Array<Sensor> | null>(null);\n  useEffect(() => {\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/api.gios.gov.pl/pjp-api/rest/station/findAll\"\n    )\n      .then(response => response.json())\n      .then(async response => {\n        const markersWithPoint: Array<AnnotatedPoint> = response.map(\n          (marker: any) => ({\n            lat: Number.parseFloat(marker.gegrLat),\n            lng: Number.parseFloat(marker.gegrLon),\n            id: marker.id\n          })\n        );\n        const markersInRadius = markersWithPoint.filter(\n          marker => pairOfPointsToMeters(currentLocation, marker) < radius\n        );\n        const annotetedMarkersInRadius = await Promise.all(\n          markersInRadius.map(async marker => ({\n            lat: marker.lat,\n            lng: marker.lng,\n            value: await getValueFromStation(marker),\n            source: \"GIOS\" as Source\n          }))\n        );\n        setData(annotetedMarkersInRadius);\n      });\n  }, [currentLocation, radius]);\n\n  return {\n    gios_data: data || []\n  };\n}\n","import { useState, useEffect } from \"react\";\nimport { Sensor, Source } from \"../views/MainView/MainView\";\nimport { pairOfPointsToMeters, Point } from \"../utils\";\n\nexport function usePWrSource(currentLocation: Point, radius: number) {\n  const [data, setData] = useState<Array<Sensor> | null>(null);\n  useEffect(() => {\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/czujniki-pwr.kdm.wcss.pl/smog.html\"\n    )\n      .then(response => response.text())\n      .then(response => {\n        const marker_lines = response\n          .replace(/(.*)\\(\\s*/g, \"$1(\")\n          .match(/var\\smarker_(.*)\\s=.*/g);\n        const markers =\n          marker_lines?.map(\n            (marker_line: string) =>\n              Array.from(\n                /marker_(.*)\\s=.*\\[(.*),\\s*(.*)\\]/g.exec(marker_line) || []\n              ) as [string, string, string, string]\n          ) || [];\n\n        const iframe_lines = response.match(/var\\si_frame_(.*)\\s=.*/g);\n        const iframes = iframe_lines?.map(\n          (iframe_line: string) =>\n            /i_frame_(.*)\\s=\\s.*?base64,(.*?)\"/g\n              .exec(iframe_line)\n              ?.slice(1) as [string, string]\n        );\n        const iframe_value_map = new Map<string, string>(iframes);\n\n        const popup_iframe_lines = response.match(/popup_(.*)\\.setContent.*/g);\n        const popup_iframes_matches =\n          popup_iframe_lines?.map(\n            (popup_iframe_line: string) =>\n              /popup_(.*)\\.setContent\\(i_frame_(.*)\\)/g\n                .exec(popup_iframe_line)\n                ?.slice(1) as [string, string]\n          ) || [];\n        const popup_iframe_map = new Map<string, string>(popup_iframes_matches);\n\n        const marker_popup_lines = response.match(/marker_(.*)\\.bindPopup.*/g);\n        const marker_popup_matches: [string, string][] =\n          marker_popup_lines?.map(\n            (marker_popup_line: string) =>\n              /marker_(.*)\\.bindPopup\\(popup_(.*)\\)/g\n                .exec(marker_popup_line)\n                ?.slice(1) as [string, string]\n          ) || [];\n        const marker_popup_map = new Map<string, string>(marker_popup_matches);\n\n        const value_from_base64 = (b64: string) => {\n          return Number.parseFloat(\n            />(\\d+)\\s.*?µg\\/m/g.exec(atob(b64))?.[1] || \"\"\n          );\n        };\n\n        const sensors = markers.map(\n          (marker: [string, string, string, string]) => ({\n            lat: Number.parseFloat(marker[2]),\n            lng: Number.parseFloat(marker[3]),\n            value:\n              value_from_base64(\n                iframe_value_map.get(\n                  popup_iframe_map.get(marker_popup_map.get(marker[1]) || \"\") ||\n                    \"\"\n                ) || \"\"\n              ) || null,\n            source: \"PWR\" as Source\n          })\n        );\n\n        const sensorsInRadius = sensors.filter(\n          (sensor: Sensor) =>\n            pairOfPointsToMeters(currentLocation, sensor) < radius\n        );\n\n        setData(sensorsInRadius);\n      });\n  }, [currentLocation, radius]);\n\n  return {\n    pwr_data: data || []\n  };\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MainView } from \"./views/MainView/MainView\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <MainView />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}